{"version":3,"sources":["env.js","components/CurrentWeather.jsx","components/WeeklyForecast.jsx","components/LocationForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","weather","map","CurrentWeather","props","Card","className","bg","this","theme","Container","style","width","Body","Img","marginBottom","marginTop","src","current","icon","Title","temp","Text","description","Component","WeeklyForecast","Table","responsive","hover","size","daily","day","Date","dt","toLocaleString","weekday","month","toFixed","LocationForm","onChange","e","address","target","name","value","handleAddressChange","Form","Group","controlId","Label","Control","street","city","Row","as","Col","state","postalCode","Button","variant","onClick","findAddress","App","latitude","longitude","collectData","a","fetch","res","json","data","setState","changeLocation","reverseGeocode","console","warn","message","local","navigator","geolocation","getCurrentPosition","success","errors","coords","localStorage","setItem","err","code","log","prevState","property","apiCall","concat","replace","results","locations","latLng","lat","lng","location","changeLocationClick","getItem","columnData","NaN","LocationInput","SplitButton","title","id","Dropdown","Item","eventKey","active","Divider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53afe057.chunk.js","sourcesContent":["const API_KEY = {\r\n    weather: \"2b6c325175c6466abc0d8179caa62040\",\r\n    map: \"jE1GaB5KTwbfCCHaA6rVAL0qvAT6sAPV\",\r\n};\r\n\r\nexport default API_KEY;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nexport class CurrentWeather extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card className=\"border-0\" bg={this.props.theme}>\r\n        <Container\r\n          className=\"d-flex justify-content-center\"\r\n          style={{ width: \"18rem\" }}\r\n        >\r\n          <Card.Body>\r\n            <Card.Img\r\n              style={{\r\n                width: \"9rem\",\r\n                marginBottom: \"-2rem\",\r\n                marginTop: \"-1rem\",\r\n              }}\r\n              src={`http://openweathermap.org/img/wn/${this.props.current.weather[0].icon}@4x.png`}\r\n            />\r\n            <Card.Title>{this.props.current.temp}&deg;C</Card.Title>\r\n            <Card.Text>\r\n              <em>{this.props.current.weather[0].description}</em>\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Container>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CurrentWeather;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nexport class WeeklyForecast extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card className=\"rounded-3 p-3 mb-0\">\r\n        <Container>\r\n          <Table responsive hover size=\"sm\" className=\"text-left\">\r\n            <thead>\r\n              <tr>\r\n                <th>Date</th>\r\n                <th>Description</th>\r\n                <th>Temperature</th>\r\n                <th className=\"d-none d-sm-table-cell\">Icon</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.props.daily.map((day) => (\r\n                <tr key={day.dt}>\r\n                  <td>\r\n                    <b>\r\n                      {new Date(day.dt * 1000).toLocaleString(\"en-GB\", {\r\n                        weekday: \"long\",\r\n                        month: \"short\",\r\n                        day: \"numeric\",\r\n                      })}\r\n                    </b>\r\n                  </td>\r\n                  <td>\r\n                    <b>{day.weather[0].description}</b>\r\n                  </td>\r\n\r\n                  <td>\r\n                    <b>{day.temp.day.toFixed(1)} &deg;C</b>\r\n                  </td>\r\n                  <td className=\"d-none d-sm-table-cell\">\r\n                    <img\r\n                      src={`http://openweathermap.org/img/wn/${day.weather[0].icon}.png`}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WeeklyForecast;\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nexport class LocationForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  onChange = (e) => {\r\n    let address = {\r\n      ...this.props.address,\r\n      [e.target.name]: e.target.value,\r\n    };\r\n    this.props.handleAddressChange(address);\r\n  };\r\n\r\n  render() {\r\n    const { address } = this.props;\r\n    return (\r\n      <Form>\r\n        <Form.Group controlId=\"formGridAddress1\">\r\n          <Form.Label>Street</Form.Label>\r\n          <Form.Control\r\n            name={\"street\"}\r\n            value={address.street || \"\"}\r\n            onChange={this.onChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formGridCity\">\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            name={\"city\"}\r\n            value={address.city || \"\"}\r\n            onChange={this.onChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"formGridState\">\r\n            <Form.Label>State</Form.Label>\r\n            <Form.Control\r\n              name={\"state\"}\r\n              value={address.state || \"\"}\r\n              onChange={this.onChange}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} controlId=\"formGridZip\">\r\n            <Form.Label>Zip / Post Code</Form.Label>\r\n            <Form.Control\r\n              name={\"postalCode\"}\r\n              value={address.postalCode || \"\"}\r\n              onChange={this.onChange}\r\n            />\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Button variant=\"primary\" onClick={this.props.findAddress}>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LocationForm;\r\n","import \"./App.css\";\n\nimport React, { Component } from \"react\";\n\nimport API_KEY from \"./env\";\nimport CurrentWeather from \"./components/CurrentWeather\";\nimport WeeklyForecast from \"./components/WeeklyForecast\";\nimport LocationForm from \"./components/LocationForm\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Button from \"react-bootstrap/Button\";\nimport SplitButton from \"react-bootstrap/SplitButton\";\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    let latitude;\n    let longitude;\n\n    if (\n      !!localStorage.getItem(\"YSYSWeatherApp.latitude\") &\n      !!localStorage.getItem(\"YSYSWeatherApp.longitude\")\n    ) {\n      latitude = localStorage.getItem(\"YSYSWeatherApp.latitude\");\n      longitude = localStorage.getItem(\"YSYSWeatherApp.longitude\");\n    }\n\n    this.state = {\n      theme: \"dark\",\n      changeLocation: true,\n      longitude,\n      latitude,\n      location: null,\n      columnData: \"temp\",\n      data: { current: { temp: NaN } },\n      address: { street: null, city: null, state: null, postalCode: null },\n    };\n  }\n\n  componentDidMount() {\n    if (\n      !!localStorage.getItem(\"YSYSWeatherApp.latitude\") &\n      !!localStorage.getItem(\"YSYSWeatherApp.longitude\")\n    ) {\n      this.collectData();\n    }\n  }\n\n  collectData = async () => {\n    try {\n      const res = await fetch(\n        `https://api.openweathermap.org/data/2.5/onecall?lat=${this.state.latitude}&lon=${this.state.longitude}&exclude=minutely,hourly&appid=${API_KEY.weather}&units=metric`\n      );\n\n      const data = await res.json();\n      this.setState({\n        data,\n        changeLocation: false,\n        theme: data.current.temp >= 20 ? \"warning\" : \"info\",\n      });\n      this.reverseGeocode();\n    } catch (e) {\n      console.warn(e.message);\n    }\n  };\n\n  local = () => {\n    navigator.geolocation.getCurrentPosition(this.success, this.errors);\n  };\n\n  success = ({ coords }) => {\n    try {\n      this.setState({\n        latitude: coords.latitude,\n        longitude: coords.longitude,\n      });\n      localStorage.setItem(\"YSYSWeatherApp.latitude\", coords.latitude);\n      localStorage.setItem(\"YSYSWeatherApp.longitude\", coords.longitude);\n      this.collectData();\n    } catch (e) {\n      console.warn(e.message);\n    }\n  };\n\n  errors = (err) => {\n    console.warn(`ERROR(${err.code}): ${err.message}`);\n  };\n\n  handleAddressChange = (address) => {\n    console.log(address);\n\n    this.setState((prevState) => ({\n      ...prevState,\n      address,\n    }));\n  };\n\n  findAddress = async () => {\n    try {\n      const address = this.state.address;\n      // let apiCall = `http://www.mapquestapi.com/geocoding/v1/address?key=${API_KEY.map}&`;\n      let apiCall = `http://open.mapquestapi.com/geocoding/v1/address?key=${API_KEY.map}&`;\n\n      for (let property in address) {\n        if (!!address[property]) {\n          apiCall = apiCall.concat(\n            `${property}=${address[property].replace(/\\s/g, \"+\")}&`\n          );\n        }\n      }\n\n      const res = await fetch(apiCall);\n      const data = await res.json();\n\n      const coords = data.results[0].locations[0].latLng;\n      this.setState({\n        address: { street: null, city: null, state: null, postalCode: null },\n        latitude: coords.lat,\n        longitude: coords.lng,\n      });\n\n      this.collectData();\n    } catch (e) {\n      console.warn(e.message);\n    }\n  };\n\n  reverseGeocode = async () => {\n    try {\n      const res = await fetch(\n        `https://api.openweathermap.org/geo/1.0/reverse?lat=${this.state.latitude}&lon=${this.state.longitude}&appid=${API_KEY.weather}`\n      );\n\n      const data = await res.json();\n      this.setState({\n        location: data[0].name,\n      });\n    } catch (e) {\n      console.warn(e.message);\n    }\n  };\n\n  changeLocationClick = () => {\n    this.setState((prevState) => ({\n      changeLocation: !prevState.changeLocation,\n    }));\n  };\n\n  render() {\n    const LocationInput = this.state.location ? (\n      <SplitButton\n        title={this.state.changeLocation ? \"Close Form\" : \"Change Location\"}\n        id=\"dropdown-menu-align-responsive-2\"\n        variant={this.state.theme}\n        onClick={this.changeLocationClick}\n      >\n        <Dropdown.Item eventKey=\"1\" active onClick={this.changeLocationClick}>\n          {this.state.changeLocation ? \"Close Form\" : \"Enter Address\"}\n        </Dropdown.Item>\n        <Dropdown.Divider />\n\n        <Dropdown.Item eventKey=\"2\" onClick={this.local}>\n          Find your location\n        </Dropdown.Item>\n      </SplitButton>\n    ) : (\n      <Button onClick={this.local} variant=\"success\">\n        Use My Current Location\n      </Button>\n    );\n\n    const { theme, location, changeLocation, address, data } = this.state;\n    return (\n      <div className={`App bg-${theme} text-white py-4 my-0 100vh`}>\n        <Container>\n          <Row>\n            <Col>\n              <h1 className=\"py-3\">Weather App</h1>\n              <h4>{location}</h4>\n              {LocationInput}\n\n              {changeLocation && (\n                <LocationForm\n                  findAddress={this.findAddress}\n                  handleAddressChange={this.handleAddressChange}\n                  address={address}\n                  changeLocation={changeLocation}\n                />\n              )}\n\n              {!!data.current.temp && (\n                <div>\n                  <CurrentWeather current={data.current} theme={theme} />\n                  <WeeklyForecast daily={data.daily} className=\"text-white\" />\n                </div>\n              )}\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}